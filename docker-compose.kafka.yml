version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - shared_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true' # при реальном развертывании это нужно не забыть убать и настроить создание топиков вручную
      KAFKA_REPLICA_FETCH_MAX_BYTES: 200000000
      KAFKA_FETCH_MAX_BYTES: 200000000
      KAFKA_MAX_REQUEST_SIZE: 2000000000  
      KAFKA_MESSAGE_MAX_BYTES: 2000000000 
    ports:
      - "9092:9092"
    networks:
      - shared_network

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
    networks:
      - shared_network

  news_service:
    image: ghcr.io/mperestoronin/classifier:latest
    container_name: news_service
    env_file:
      - .env
    depends_on:
      - kafka
    networks:
      - shared_network

networks:
  shared_network:
    external: true
